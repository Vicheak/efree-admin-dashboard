pipeline {

    agent any

    environment {
        ENV = "${env.GIT_BRANCH == 'origin/prod' ? 'prod' : 'dev'}"
        TELEGRAM_TOKEN = credentials('telegram-token')
        IMAGE_NAME = "efree-admin-dashboard"
        VERSION = "1.0.${env.BUILD_NUMBER}"
    }

    stages {
        stage('Build Admin Dashboard') {
            steps {
                sh 'echo "Building Admin Dashboard..."'
                sh 'ls -lart'
                script {
                    def dockerfileContent = '''
                        # Setup
                        ARG NODE_VERSION=21.7.3
                        FROM node:${NODE_VERSION}-slim as base
                        ARG PORT=3000
                        WORKDIR /src

                        # Install dependencies and build
                        FROM base as build
                        COPY --link package.json package-lock.json .
                        RUN npm install --force
                        COPY --link . .
                        RUN npm run build

                        # Run the application
                        FROM base
                        ENV PORT=$PORT
                        # ENV NODE_ENV=production
                        COPY --from=build /src/.output /src/.output
                        EXPOSE $PORT
                        CMD ["node", ".output/server/index.mjs"]
                    '''

                    writeFile file: 'Dockerfile', text: dockerfileContent

                    docker.withRegistry("", "${BASE_REGISTRY}") {
                        def adminDashboardImage = docker.build("${BASE_REGISTRY_USER}/${IMAGE_NAME}:${VERSION}", "-f Dockerfile .")
                        adminDashboardImage.push()
                    }
                }
            }
        }
    }
    
}